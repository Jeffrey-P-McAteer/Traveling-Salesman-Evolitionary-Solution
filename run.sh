#!/bin/bash

if [ "$#" -lt 2 ]; then
  echo "Usage: ./run.sh problem.tsp TSAlgo [TSAlgo1 TSAlgo2....]"
  exit 0
fi

path_length_threshold=100

printf '' > .middle_1
for class in "${@:2}"; do
  cat <<EOF >> .middle_1
new $class("$1"),
EOF
done

printf '' > .middle_2
for class in "${@:2}"; do
  cat <<EOF >> .middle_2
"$class",
EOF
done

middle_1=$(cat .middle_1)
middle_2=$(cat .middle_2)

cat <<EOF > Test.java
// Autogenerated testing class
import static java.lang.System.out;
public class Test {
  public static void main(String... args) {
    TSAlgo[] algorithms = new TSAlgo[] {
      $middle_1
    };
    String[] algoNames = new String[] {
      $middle_2
    };
    for (int i=0; i<algorithms.length; i++) {
      long begin = System.nanoTime();
      int[] path = algorithms[i].solve();
      long msTaken = (System.nanoTime() - begin) / 1000000;
      if (path == null) {
        out.printf("%s does not implement a solution\n", algoNames[i]);
        continue;
      }
      boolean repeats = false;
      outer: for (int ii=0; ii<path.length; ii++) {
        for (int jj=ii+1; jj<path.length; jj++) {
          if (path[ii] == path[jj]) {
            repeats = true;
            break outer;
          }
        }
      }
      if (repeats || path.length != algorithms[i].weights.length) {
        out.printf("%s does not give a correct solution\n", algoNames[i]);
        continue;
      }
      double length = TSAlgo.pathLength(path);
      out.printf("%s \t %,.2f units long \t %,d ms\n", algoNames[i], length, msTaken);
      if (path.length < $path_length_threshold) {
        out.printf("Path order: ");
        for (int j : path) {
          out.printf("%d, ", j);
        }
        out.println();
        algorithms[i].display(path, "$1 solved by "+algoNames[i]);
      }
    }
  }
}
EOF

rm .middle*

javac *.java || exit 0

if [ $(hostname) == "cs.cpsc.umw.edu" ]; then
  echo "Increasing Heap memory, we are on CS server"
  java -ea -Xmsg -Xmxg Test
else
  java -ea -Xms6g -Xmx6g Test
fi

rm Test.java
rm *.class

